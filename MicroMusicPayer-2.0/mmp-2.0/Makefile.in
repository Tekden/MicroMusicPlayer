########## directory variables ###############

prefix      = @prefix@

bindir      = $(prefix)@bindir@

datarootdir = @datarootdir@
datadir     = $(datarootdir)

desktopdir  = /usr/share/applications

srcdir      = .

########### binary variables #################

INSTALL = @INSTALL@

MKDIR_P = @MKDIR_P@

LN_S    = @LN_S@

CHMOD   = @CHMOD@

CP      = @CP@

RM      = @RM@

########### Desktop file path ################

######## library linking variables ###########


GTK_CFLAGS = @GTK_CFLAGS@

GTK_LIBS   = @GTK_LIBS@

VLC_CFLAGS = @VLC_CFLAGS@

VLC_LIBS   = @VLC_LIBS@

##############################################

########### binary variables #################

INSTALL = @INSTALL@

MKDIR_P = @MKDIR_P@

LN_S    = @LN_S@

CHMOD   = @CHMOD@

CP      = @CP@

RM      = @RM@

########### Desktop file path ################

DESKTOP_FOLDER = $(if $(realpath $(desktopdir)), $(realpath $(desktopdir)))

##############################################

CXXFLAGS = @CXXFLAGS@

# I dislike directory printing behaviour of make: it look's like an error message cause of formatting style of this feature.
MAKEFLAGS += --no-print-directory

MMP_CXXFLAGS = $(CXXFLAGS) -std=c++11

override LDFLAGS   := $(GTK_LIBS) $(VLC_LIBS)

BUILD_DIR = ./build

CXXFILES =  Resizer.cpp main.cpp

PRGNAME  = MicroMusicPlayer

OBJFILES = $(foreach var, $(CXXFILES:.cpp=.o), $(BUILD_DIR)/$(var))

$(PRGNAME): $(OBJFILES)
	$(CXX) $(MMP_CXXFLAGS) $(GTK_CFLAGS) $(VLC_CFLAGS) $(OBJFILES) -o $(PRGNAME) $(LDFLAGS)

$(BUILD_DIR)/Resizer.o: Resizer.cpp Resizer.h
	$(CXX) $(MMP_CXXFLAGS) $(GTK_CFLAGS) $(VLC_CFLAGS) -c $< -o $@ $(LDFLAGS)

$(BUILD_DIR)/main.o: main.cpp
	$(CXX) -DMAIN_PATH=\"$(DESTDIR)$(datadir)/$(PRGNAME)/\" $(MMP_CXXFLAGS) $(GTK_CFLAGS) $(VLC_CFLAGS) -c $< -o $@ $(LDFLAGS)


install: $(PRGNAME)
	$(MAKE) install-data
	if `test ! -d $(DESTDIR)$(bindir)` ; then  $(MKDIR_P) $(DESTDIR)$(bindir) ; fi
	$(INSTALL) $(PRGNAME) $(DESTDIR)$(bindir)
	if `test ! -L  $(DESTDIR)$(bindir)/mmp` ; then cd $(DESTDIR)$(bindir)/ ;  $(LN_S) -T $(DESTDIR)$(bindir)/$(PRGNAME) $(DESTDIR)$(bindir)/mmp ; fi

install-strip: $(PRGNAME)
	$(MAKE) install-data
	if `test ! -d $(DESTDIR)$(bindir)` ; then  $(MKDIR_P) $(DESTDIR)$(bindir) ; fi
	$(INSTALL) -s $(PRGNAME) $(DESTDIR)$(bindir)
	if `test ! -L  $(DESTDIR)$(bindir)/mmp` ; then cd $(DESTDIR)$(bindir)/ ;  $(LN_S) -T $(DESTDIR)$(bindir)/$(PRGNAME) $(DESTDIR)$(bindir)/mmp ; fi

install-data:
	if `test ! -d $(DESTDIR)$(datadir)` ; then $(MKDIR_P) $(DESTDIR)$(datadir) ; fi
	if `test ! -d $(DESTDIR)$(datadir)/$(PRGNAME)` ; then  $(MKDIR_P) $(DESTDIR)$(datadir)/$(PRGNAME) ; fi
	$(CP) -R ./images $(DESTDIR)$(datadir)/$(PRGNAME) ;
	$(CP) -R ./Configuration $(DESTDIR)$(datadir)/$(PRGNAME) ;
	$(CP) -R ./README $(DESTDIR)$(datadir)/$(PRGNAME) ;
	$(CP) -R ./License $(DESTDIR)$(datadir)/$(PRGNAME) ;
	chmod -R a+rx $(DESTDIR)$(datadir)/$(PRGNAME) ;
	chmod -R o+w $(DESTDIR)$(datadir)/$(PRGNAME)/Configuration ;
ifneq ($(DESKTOP_FOLDER), )
	$(MAKE) desktop
endif

uninstall:
	if `test -d $(DESTDIR)$(datadir)/$(PRGNAME)` ; then  $(RM) -R $(DESTDIR)$(datadir)/$(PRGNAME) ; fi
	if `test -L  $(DESTDIR)$(bindir)/mmp` ; then $(RM) $(DESTDIR)$(bindir)/mmp ; fi
	if `test -f $(DESTDIR)$(bindir)/$(PRGNAME)` ; then $(RM) $(DESTDIR)$(bindir)/$(PRGNAME) ; fi
	if `test -d $(desktopdir)` && `test -f $(desktopdir)/$(PRGNAME).desktop` ; then  $(RM) $(desktopdir)/$(PRGNAME).desktop ; fi


desktop:
	@echo "[Desktop Entry]" > $(desktopdir)/$(PRGNAME).desktop
	@echo "Version=2.0" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Name=MicroMusicPlayer" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "GenericName=Micro Music Player" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Comment=Micro Music Player a very simple play a folder or a file music player." >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Exec=MicroMusicPlayer %f" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Icon=$(datadir)/$(PRGNAME)/images/images/Micro_Music_Player.png" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Terminal=false" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "X-MultipleArgs=false" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "StartupNotify=true" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Type=Application" >> $(desktopdir)/$(PRGNAME).desktop
	@echo "MimeType=audio/mpeg;audio/ogg;audio/x-wav;audio/x-flac;"  >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Keywords=Audio;Player;Song;mp3;ogg;wav;flac;"  >> $(desktopdir)/$(PRGNAME).desktop
	@echo "Categories=AudioVideo;Audio;Player;GNOME;GTK;"  >> $(desktopdir)/$(PRGNAME).desktop


clean:
	- $(RM) -f $(OBJFILES) $(PRGNAME)


.PHONY: clean uninstall